{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benja\\\\Downloads\\\\Notes-App-main\\\\Notes-App-main\\\\src\\\\components\\\\ListNotes.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport { FaEdit } from \"react-icons/fa\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport Modal from \"react-modal\";\nimport { FaWindowClose } from \"react-icons/fa\";\nimport { FaCheckCircle } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst modalDesign = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nModal.setAppElement(\"#root\");\nconst List = props => {\n  _s();\n  const [updatedNote, setUpdatedNote] = useState();\n  const [showAlert, setShowAlert] = useState(false);\n  const {\n    detailNotes,\n    setdetailNotes\n  } = props;\n  const pushDelete = item => {\n    const result = window.confirm(\"Are you sure to delete this note?\");\n    if (result) {\n      let newList = detailNotes.filter(note => {\n        return note.id !== item.id;\n      });\n      console.log(newList);\n      setdetailNotes(newList);\n    }\n  };\n  useEffect(() => {\n    console.log(detailNotes);\n  }, [detailNotes]);\n  const [note, setNote] = useState();\n  const [id, setId] = useState();\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [date, setDate] = useState();\n  function openModal(e) {\n    setIsOpen(true);\n    setDate(e.date);\n    setNote(e.status);\n    setId(e.id);\n  }\n  const pushUpdateNote = e => {\n    const date = new Date();\n    const UserNoteUpdated = {\n      id: id,\n      title: e.target.value,\n      date: date.toLocaleString(\"pt-US\", {\n        day: \"numeric\",\n        month: \"numeric\",\n        year: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\"\n      })\n    };\n    console.log(UserNoteUpdated);\n    setUpdatedNote(UserNoteUpdated);\n  };\n  const FinalNoteUpdated = () => {\n    const index = detailNotes.findIndex(element => element.id === id),\n      setUpdatedNote = [...detailNotes];\n    setUpdatedNote[index] = updatedNote;\n    setdetailNotes(setUpdatedNote);\n    setShowAlert(true);\n    setIsOpen(false);\n  };\n  function closeModal() {\n    setIsOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: detailNotes.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Note-Wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Date-Note\",\n          children: item.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Status-Note\",\n          children: item.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Delete-Wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Delete-Button\",\n            onClick: () => pushDelete(item),\n            children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Edit-Wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Edit-Button\",\n            value: item.id,\n            onClick: () => openModal(item),\n            children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: modalIsOpen,\n            onRequestClose: closeModal,\n            style: modalDesign,\n            contentLabel: \"Example Modal\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Note-Modal-Wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Date-Note\",\n                children: date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n                className: \"Status-Edit-Note\",\n                onChange: pushUpdateNote,\n                children: note\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"Update-Button\",\n                onClick: () => FinalNoteUpdated(item),\n                children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this), showAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"saved\",\n                  children: \"Saved!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"Close-Button\",\n                onClick: closeModal,\n                children: /*#__PURE__*/_jsxDEV(FaWindowClose, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(List, \"Rn2wamVT7O0sn+5zG5lFRfcSfSU=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useEffect","useState","FaTrashAlt","FaEdit","TextareaAutosize","Modal","FaWindowClose","FaCheckCircle","modalDesign","content","top","left","right","bottom","marginRight","transform","setAppElement","List","props","updatedNote","setUpdatedNote","showAlert","setShowAlert","detailNotes","setdetailNotes","pushDelete","item","result","window","confirm","newList","filter","note","id","console","log","setNote","setId","modalIsOpen","setIsOpen","date","setDate","openModal","e","status","pushUpdateNote","Date","UserNoteUpdated","title","target","value","toLocaleString","day","month","year","hour","minute","FinalNoteUpdated","index","findIndex","element","closeModal","map"],"sources":["C:/Users/benja/Downloads/Notes-App-main/Notes-App-main/src/components/ListNotes.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport { FaEdit } from \"react-icons/fa\";\n\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport Modal from \"react-modal\";\nimport { FaWindowClose } from \"react-icons/fa\";\nimport { FaCheckCircle } from \"react-icons/fa\";\n\nconst modalDesign = {\n  content: { top: \"50%\", left: \"50%\", right: \"auto\", bottom: \"auto\", marginRight: \"-50%\", transform: \"translate(-50%, -50%)\", }\n};\n\nModal.setAppElement(\"#root\");\n\nconst List = (props) => {\n  const [updatedNote, setUpdatedNote] = useState();\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  const { detailNotes, setdetailNotes } = props;\n\n\n  const pushDelete = (item) => {\n\n    const result = window.confirm(\"Are you sure to delete this note?\");\n\n    if (result) {\n      let newList = detailNotes.filter((note) => {\n\n        return note.id !== item.id;\n      });\n\n      console.log(newList);\n\n      setdetailNotes(newList);\n    }\n  };\n\n\n  useEffect(() => { console.log(detailNotes); }, [detailNotes]);\n\n\n\n  const [note, setNote] = useState();\n\n  const [id, setId] = useState();\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const [date, setDate] = useState();\n\n\n  function openModal(e) {\n    setIsOpen(true); setDate(e.date); setNote(e.status); setId(e.id);\n  }\n\n  const pushUpdateNote = (e) => {\n    const date = new Date();\n    const UserNoteUpdated = {\n      id: id, title: e.target.value, date: date.toLocaleString(\"pt-US\", {\n        day: \"numeric\",\n        month: \"numeric\",\n        year: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n      }),\n    };\n    console.log(UserNoteUpdated); setUpdatedNote(UserNoteUpdated);\n  };\n\n  const FinalNoteUpdated = () => {\n    const index = detailNotes.findIndex((element) => \n    element.id === id),\n      setUpdatedNote = [...detailNotes];\n      setUpdatedNote[index] = updatedNote;\n    \n      setdetailNotes(setUpdatedNote);\n    \n      setShowAlert(true);\n    \n      setIsOpen(false);\n  };\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    <>\n      {detailNotes.map((item) => {\n        return (\n          <div key={item.id} className=\"Note-Wrapper\">\n            <div className=\"Date-Note\">{item.date}</div>\n            <div className=\"Status-Note\">{item.status}</div>\n            <div className=\"Delete-Wrapper\">\n              <button\n                className=\"Delete-Button\"\n                onClick={() => pushDelete(item)}\n              >\n                <FaTrashAlt />\n              </button>\n            </div>\n            <div className=\"Edit-Wrapper\">\n              <button\n                className=\"Edit-Button\"\n                value={item.id}\n                onClick={() => openModal(item)}\n              >\n                <FaEdit />\n              </button>\n              <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                style={modalDesign}\n                contentLabel=\"Example Modal\"\n              >\n                <div className=\"Note-Modal-Wrapper\">\n                  <div className=\"Date-Note\">{date}</div>\n                  <TextareaAutosize\n                    className=\"Status-Edit-Note\"\n                    onChange={pushUpdateNote}\n                  >\n                    {note}\n                  </TextareaAutosize>\n                  <button\n                    className=\"Update-Button\"\n                    onClick={() => FinalNoteUpdated(item)}\n                  >\n                    <FaCheckCircle />\n                    {showAlert && <div className=\"saved\">Saved!</div>}\n                  </button>\n                  <button className=\"Close-Button\" onClick={closeModal}>\n                    <FaWindowClose />\n                  </button>\n                </div>\n              </Modal>\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default List;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}